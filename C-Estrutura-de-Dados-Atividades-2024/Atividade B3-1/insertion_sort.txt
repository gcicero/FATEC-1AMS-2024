1. Linha 1: `for j ← 2 to length[A]` = n(3t)
   - t: Atribuição de j (inicialização do loop).
   - nt: Comparação de j <= {length}[A] (condição do loop).
   - nt: Incremento de j (próxima iteração do loop).

2. Linha 2: `key ← A[j]` = 2t
   - t: Atribuição do valor de A[j] à variável key.
   - t: Acesso ao valor do array A[j].

3. Linha 4: `i ← j - 1` = 2t
   - t: Atribuição de ( j - 1 ) à variável i.
   - t: Operação de subtração ( j - 1 ).

4. Linha 5: `while i > 0 and A[i] > key`= n(4t)
   - nt: Comparação de ( i > 0 ) (condição do loop).
   - nt: Comparação de ( A[i] > key ).
   - nt: Acesso ao valor do array ( A[i] ).
   - nt: Acesso ao valor da variável key.

5. Linha 6: `A[i + 1] ← A[i]` = 3t 
   - t: Atribuição de ( A[i] ) ao array ( A[i + 1] ).
   - t: Acesso ao valor do array ( A[i] ).
   - t: Acesso ao valor do array ( A[i + 1] ).

6. Linha 7: `i ← i - 1` = 2t 
   - t: Atribuição do valor de ( i - 1 ) à variável `i`.
   - t: Operação de subtração ( i - 1 ).

7. Linha 8: `A[i + 1] ← key` = 2t 
   - t: Atribuição do valor de `key` ao array ( A[i + 1] ).
   - t: Acesso ao valor do array ( A[i + 1] ).

Total = (n(3t)+n(4t))+(2t+2t+3t+2t+2t) = n(7t)+11t
